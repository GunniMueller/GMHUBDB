%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.28 841.89 0 1 45 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /AvantGarde-Demi FMFONTDEFINE
2 1 /Symbol FMFONTDEFINE
3 0 /AvantGarde-Book FMFONTDEFINE
4 1 /ZapfDingbats FMFONTDEFINE
5 0 /Helvetica-Oblique FMFONTDEFINE
6 0 /Helvetica-Bold FMFONTDEFINE
7 0 /Times-Roman FMFONTDEFINE
8 0 /Times-Bold FMFONTDEFINE
9 0 /AvantGarde-DemiOblique FMFONTDEFINE
10 0 /ZapfChancery-MediumItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "23" 1
595.28 841.89 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0.5 0.5 0 0 0.5 0.5 1]
[ 0 0 0 0.7 0.3 0.3 0.3]
[ 0 0 0 0.8 0.2 0.2 0.2]
[ 0.85 0.85 0.4 0 0.15 0.15 0.6]
[ 1 0.72 0.2 0.06 0 0.22 0.74]
[ 0 0.25 1 0 1 0.75 0]
[ 0.43 0.91 0.3 0 0.57 0.09 0.7]
[ 1 0.8 0 0 0 0.2 1]
[ 0 0.25 1 0 1 0.75 0]
[ 0.9 0.1 0.2 0 0.1 0.9 0.8]
 24 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
56.69 806.46 793.7 820.63 R
7 X
0 0 0 1 0 0 0 K
V
56.69 260.79 793.7 274.96 R
V
0 0.3 1 0 1 0.7 0 K
0 12 Q
0 X
0 0.3 1 0 1 0.7 0 K
() 56.69 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
() 373.87 266.96 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
() 767 266.96 T
0 0 0 1 0 0 0 K
0 813.54 0 274.96 2 L
0.1 H
2 Z
0 0 0 1 0 0 0 K
N
28.35 841.89 813.54 841.89 2 L
N
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
(LFE Datenbanken und Informationssysteme) 56.69 266.96 T
() 373.87 266.96 T
(9) 767 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
() 780.35 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 768.28 793.7 775.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 772.54 793.7 772.54 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 246.61 841.89 841.89 C
1 0.8 0 0 0 0.2 1 K
1 24 Q
0 X
1 0.8 0 0 0 0.2 1 K
(B-B\212ume) 602.66 783.37 T
0 0 0 1 0 0 0 K
1 0.8 0 0 0 0.2 1 K
( \050For) 708.74 783.37 T
(ts) 759.62 783.37 T
(.\051) 777.86 783.37 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(L) 56.69 740.28 T
1 19.2 Q
(\205SCH) 67.25 740.28 T
1 24 Q
(-A) 121.4 740.28 T
1 19.2 Q
(LGORITHMUS) 149.24 740.28 T
0 0 0 1 0 0 0 K
2 18 Q
0 0 0 1 0 0 0 K
(\267) 80.9 712.28 T
0 F
(V) 99.21 712.28 T
(orgehen) 109.78 712.28 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
4 F
0 0 0 0.5 0.5 0.5 0.5 K
(\345) 105.02 685.28 T
0 0 0 1 0 0 0 K
0 F
0 0 0 1 0 0 0 K
(Suchen der L\232sch-Stelle) 127.56 685.28 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
4 F
0 0 0 0.5 0.5 0.5 0.5 K
(\345) 105.02 658.28 T
0 0 0 1 0 0 0 K
0 F
0 0 0 1 0 0 0 K
(Entf) 127.56 658.28 T
(er) 159.04 658.28 T
(nen des Elements) 175.49 658.28 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(\245\245\245) 132.28 631.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(In Blatt, o) 155.9 631.28 T
(.k.) 231.24 631.28 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(\245\245\245) 132.28 604.28 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(In innerem Knoten: Ersetz) 155.9 604.28 T
(en durch Inorder-Nachf) 363.73 604.28 T
(olger) 548.27 604.28 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
4 F
0 0 0 0.5 0.5 0.5 0.5 K
(\345) 105.02 577.28 T
0 0 0 1 0 0 0 K
0 F
0 0 0 1 0 0 0 K
(Sicherstellen, da\247 w) 127.56 577.28 T
(eiterhin mindestens m Elemente in dem Knoten enthalten sind.) 289.43 577.28 T
(F) 127.56 550.28 T
(alls der Knoten jetzt m-1 Element enth\212lt \050Under\337o) 137.66 550.28 T
(w\051, A) 540.55 550.28 T
(usbalancieren oder V) 581.02 550.28 T
(er-) 749.66 550.28 T
(schmelz) 127.56 528.28 T
(en des Knotens mit einem Geschwister-Knoten) 193.29 528.28 T
56.69 289.13 793.7 799.37 C
56.69 303.31 793.7 522.28 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
205.51 465.59 517.32 508.11 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
2 Z
0 X
N
70.87 352.21 375.59 394.73 7.09 RR
6 X
V
0 X
N
6 16 Q
(p) 79.87 372.47 T
0 0 0 1 0 0 0 K
8 12 Q
(0) 90.25 367.67 T
0 0 0 1 0 0 0 K
6 16 Q
(k) 104.25 372.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 113.85 367.67 T
0 0 0 1 0 0 0 K
6 16 Q
(a) 127.85 372.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 137.35 367.67 T
0 0 0 1 0 0 0 K
6 16 Q
(p) 151.35 372.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 161.73 367.67 T
0 0 0 1 0 0 0 K
2 16 Q
(\274) 175.73 372.47 T
6 F
(k) 199.73 372.47 T
6 12 Q
(m) 209.32 367.67 T
6 16 Q
(a) 227.99 372.47 T
6 12 Q
(m) 237.49 367.67 T
6 16 Q
(p) 256.16 372.47 T
6 12 Q
(m) 266.54 367.67 T
2 16 Q
(\274) 285.21 372.47 T
6 F
(k) 309.21 372.47 T
6 12 Q
(t) 318.81 367.67 T
6 16 Q
(a) 330.8 372.47 T
6 12 Q
(t) 340.3 367.67 T
6 16 Q
(p) 352.3 372.47 T
6 12 Q
(t) 362.68 367.67 T
2 16 Q
(,) 322.8 372.47 T
(,) 344.3 372.47 T
(,) 219.99 372.47 T
(,) 248.16 372.47 T
(,) 277.21 372.47 T
(,) 301.21 372.47 T
(,) 96.25 372.47 T
(,) 119.85 372.47 T
(,) 143.35 372.47 T
(,) 167.73 372.47 T
(,) 191.73 372.47 T
81.46 386.78 94.65 386.78 2 L
0.72 H
N
105.85 386.78 118.25 386.78 2 L
N
129.44 386.78 141.75 386.78 2 L
N
152.95 386.78 166.13 386.78 2 L
N
201.32 386.78 218.39 386.78 2 L
N
229.59 386.78 246.56 386.78 2 L
N
257.76 386.78 275.61 386.78 2 L
N
310.81 386.78 321.2 386.78 2 L
N
332.4 386.78 342.7 386.78 2 L
N
353.9 386.78 365.08 386.78 2 L
N
396.85 352.21 779.39 394.73 7.09 RR
6 X
V
0.1 H
0 X
N
90 450 1 1 280.3 407.93 411.75 GG
408.11 410.76 411.68 411.41 410.37 398.29 404.53 410.11 4 Y
2 H
0 Z
N
408.11 410.76 411.68 411.41 410.37 398.29 404.53 410.11 4 Y
V
396.85 472.68 407.93 411.75 2 L
N
90 450 1 1 268.04 99.8 412.03 GG
99.77 411.03 103.41 410.91 99.34 398.35 96.13 411.16 4 Y
N
99.77 411.03 103.41 410.91 99.34 398.35 96.13 411.16 4 Y
V
311.81 472.68 M
 311.81 446.69 311.81 446.69 205.51 440.2 D
 118.05 434.85 100.56 434.06 99.8 412.03 D
N
6 F
(p) 411.02 371.47 T
0 0 0 1 0 0 0 K
8 12 Q
(0) 421.41 366.67 T
0 0 0 1 0 0 0 K
6 16 Q
(k) 435.61 371.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 445.2 366.67 T
0 0 0 1 0 0 0 K
6 16 Q
(a) 459.65 371.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 469.15 366.67 T
0 0 0 1 0 0 0 K
6 16 Q
(p) 483.4 371.47 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 493.78 366.67 T
0 0 0 1 0 0 0 K
2 16 Q
(\274) 507.78 371.47 T
6 F
(k) 531.78 371.47 T
6 12 Q
(m) 541.38 366.67 T
6 16 Q
(a) 560.04 371.47 T
6 12 Q
(m) 569.55 366.67 T
6 16 Q
(p) 588.22 371.47 T
6 12 Q
(m) 598.6 366.67 T
2 16 Q
(\274) 617.26 371.47 T
6 F
(k) 641.26 371.47 T
6 12 Q
(v) 650.86 366.67 T
6 16 Q
(a) 665.53 371.47 T
6 12 Q
(v) 675.03 366.67 T
6 16 Q
(p) 689.71 371.47 T
6 12 Q
(v) 700.09 366.67 T
2 16 Q
(,) 657.53 371.47 T
(,) 681.71 371.47 T
(,) 552.05 371.47 T
(,) 580.22 371.47 T
(,) 609.27 371.47 T
(,) 633.26 371.47 T
(,) 427.41 371.47 T
(,) 451.4 371.47 T
(,) 475.4 371.47 T
(,) 499.78 371.47 T
(,) 523.78 371.47 T
7 F
(\051) 0 -270 423.21 384.19 TF
(\051) 0 -270 447.4 384.19 TF
(\051) 0 -270 471.4 384.19 TF
(\051) 0 -270 495.59 384.19 TF
(\051) 0 -270 545.91 384.19 TF
(\051) 0 -270 574.13 384.19 TF
(\051) 0 -270 602.74 384.19 TF
(\051) 0 -270 653.4 384.19 TF
(\051) 0 -270 677.62 384.19 TF
(\051) 0 -270 702.23 384.19 TF
6 F
(p) 213.67 481.94 T
0 0 0 1 0 0 0 K
8 12 Q
(0) 224.05 477.14 T
0 0 0 1 0 0 0 K
6 16 Q
(k) 238.05 481.94 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 247.65 477.14 T
0 0 0 1 0 0 0 K
6 16 Q
(a) 261.65 481.94 T
0 0 0 1 0 0 0 K
8 12 Q
(1) 271.15 477.14 T
0 0 0 1 0 0 0 K
2 16 Q
(\274) 285.15 481.94 T
6 F
(p) 309.15 481.94 T
6 12 Q
(r) 319.53 477.14 T
0 0 0 1 0 0 0 K
8 F
(1) 336.2 477.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 327.2 477.14 T
0.43 0.91 0.3 0 0.57 0.09 0.7 K
6 16 Q
0.43 0.91 0.3 0 0.57 0.09 0.7 K
(k) 350.2 481.94 T
6 12 Q
(r) 359.8 477.14 T
6 16 Q
(a) 372.46 481.94 T
6 12 Q
(r) 381.96 477.14 T
0 0 0 1 0 0 0 K
6 16 Q
0 0 0 1 0 0 0 K
(p) 394.63 481.94 T
6 12 Q
(r) 405.02 477.14 T
2 16 Q
(\274) 417.68 481.94 T
6 F
(k) 441.68 481.94 T
6 12 Q
(s) 451.28 477.14 T
6 16 Q
(a) 465.95 481.94 T
6 12 Q
(s) 475.45 477.14 T
6 16 Q
(p) 490.12 481.94 T
6 12 Q
(s) 500.51 477.14 T
2 16 Q
(,) 457.95 481.94 T
(,) 482.12 481.94 T
(,) 230.05 481.94 T
(,) 253.65 481.94 T
(,) 277.15 481.94 T
(,) 301.15 481.94 T
(,) 342.2 481.94 T
(,) 364.46 481.94 T
(,) 386.63 481.94 T
(,) 409.68 481.94 T
(,) 433.68 481.94 T
406.1 334.68 408.69 334.16 404.29 325.64 403.51 335.2 4 Y
1 H
N
406.1 334.68 408.69 334.16 404.29 325.64 403.51 335.2 4 Y
V
411.02 359.29 406.2 335.17 2 L
V
N
56.69 289.13 793.7 799.37 C
0 246.61 841.89 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 294
%%Page: "24" 2
595.28 841.89 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0.5 0.5 0 0 0.5 0.5 1]
[ 0 0 0 0.7 0.3 0.3 0.3]
[ 0 0 0 0.8 0.2 0.2 0.2]
[ 0.85 0.85 0.4 0 0.15 0.15 0.6]
[ 1 0.72 0.2 0.06 0 0.22 0.74]
[ 0 0.25 1 0 1 0.75 0]
[ 0.43 0.91 0.3 0 0.57 0.09 0.7]
[ 1 0.8 0 0 0 0.2 1]
[ 0 0.25 1 0 1 0.75 0]
[ 0.9 0.1 0.2 0 0.1 0.9 0.8]
 24 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
56.69 806.46 793.7 820.63 R
7 X
0 0 0 1 0 0 0 K
V
56.69 260.79 793.7 274.96 R
V
0 0.3 1 0 1 0.7 0 K
0 12 Q
0 X
0 0.3 1 0 1 0.7 0 K
() 56.69 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
() 373.87 266.96 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
() 767 266.96 T
0 0 0 1 0 0 0 K
0 813.54 0 274.96 2 L
0.1 H
2 Z
0 0 0 1 0 0 0 K
N
28.35 841.89 813.54 841.89 2 L
N
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
(LFE Datenbanken und Informationssysteme) 56.69 266.96 T
() 373.87 266.96 T
(10) 767 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
() 780.35 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 768.28 793.7 775.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 772.54 793.7 772.54 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 246.61 841.89 841.89 C
1 0.8 0 0 0 0.2 1 K
1 24 Q
0 X
1 0.8 0 0 0 0.2 1 K
(B-B\212ume) 602.66 783.37 T
0 0 0 1 0 0 0 K
1 0.8 0 0 0 0.2 1 K
( \050For) 708.74 783.37 T
(ts) 759.62 783.37 T
(.\051) 777.86 783.37 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(L) 56.69 740.28 T
1 19.2 Q
(\205SCH) 67.25 740.28 T
1 24 Q
(-A) 121.4 740.28 T
1 19.2 Q
(LGORITHMUS) 149.24 740.28 T
1 24 Q
(\050F) 273.84 740.28 T
1 19.2 Q
(OR) 294.48 740.28 T
(TS) 322.51 740.28 T
1 24 Q
(.\051) 340.56 740.28 T
0 0 0 1 0 0 0 K
2 18 Q
0 0 0 1 0 0 0 K
(\267) 80.9 712.28 T
0 F
(Under\337o) 99.21 712.28 T
(w-Behandlung) 166.96 712.28 T
(Balancier) 127.56 686.28 T
(ung \050rechtes Geschwister hat mehr als m Elemente\051) 202.85 686.28 T
(\206ber) 127.56 476.77 T
(nehmen eines Elements v) 167.01 476.77 T
(om rechten Geschwister) 373.65 476.77 T
56.69 289.13 793.7 799.37 C
56.69 492.77 793.7 680.28 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
70.87 510.21 368.5 552.72 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
2 Z
0 X
N
0 1 1 0 1 0 0 K
6 16 Q
0 1 1 0 1 0 0 K
(p) 79.87 530.47 T
8 12 Q
(0) 90.25 525.67 T
6 16 Q
(k) 104.25 530.47 T
8 12 Q
(1) 113.85 525.67 T
6 16 Q
(a) 127.85 530.47 T
8 12 Q
(1) 137.35 525.67 T
6 16 Q
(p) 151.35 530.47 T
8 12 Q
(1) 161.73 525.67 T
2 16 Q
(\274) 175.73 530.47 T
6 F
(k) 199.73 530.47 T
6 12 Q
(m) 209.32 525.67 T
8 F
(1) 231.99 525.67 T
7 F
(\320) 222.99 525.67 T
6 16 Q
(a) 245.99 530.47 T
6 12 Q
(m) 255.49 525.67 T
8 F
(1) 278.16 525.67 T
7 F
(\320) 269.16 525.67 T
6 16 Q
(p) 292.15 530.47 T
6 12 Q
(m) 302.54 525.67 T
8 F
(1) 325.2 525.67 T
7 F
(\320) 316.2 525.67 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 237.99 530.47 T
(,) 284.16 530.47 T
0 1 1 0 1 0 0 K
0 1 1 0 1 0 0 K
(,) 96.25 530.47 T
(,) 119.85 530.47 T
(,) 143.35 530.47 T
(,) 167.73 530.47 T
(,) 191.73 530.47 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
81.46 544.78 94.65 544.78 2 L
0.72 H
N
105.85 544.78 118.25 544.78 2 L
N
129.44 544.78 141.75 544.78 2 L
N
152.95 544.78 166.13 544.78 2 L
N
201.32 544.78 236.39 544.78 2 L
N
247.59 544.78 282.56 544.78 2 L
N
293.75 544.78 329.6 544.78 2 L
N
0 0 0 1 0 0 0 K
396.85 510.21 779.39 552.72 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
0 X
N
205.51 623.59 503.15 666.11 7.09 RR
6 X
V
0 X
N
(\274) 213.67 639.94 T
6 F
(k) 237.67 639.94 T
6 12 Q
(r) 247.27 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 263.93 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 254.93 635.14 T
6 16 Q
(a) 277.93 639.94 T
6 12 Q
(r) 287.43 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 304.1 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 295.1 635.14 T
6 16 Q
(p) 318.1 639.94 T
6 12 Q
(r) 328.48 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 345.15 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 336.15 635.14 T
0.43 0.91 0.3 0 0.57 0.09 0.7 K
6 16 Q
0.43 0.91 0.3 0 0.57 0.09 0.7 K
(k) 359.14 639.94 T
6 12 Q
(r) 368.74 635.14 T
6 16 Q
(a) 381.41 639.94 T
6 12 Q
(r) 390.91 635.14 T
0 0 0 1 0 0 0 K
6 16 Q
0 0 0 1 0 0 0 K
(p) 403.58 639.94 T
6 12 Q
(r) 413.96 635.14 T
2 16 Q
(\274) 426.63 639.94 T
(,) 229.67 639.94 T
(,) 269.93 639.94 T
(,) 310.1 639.94 T
(,) 351.15 639.94 T
(,) 373.41 639.94 T
(,) 395.58 639.94 T
(,) 418.63 639.94 T
90 450 1 1 275.19 409.46 569.96 GG
409.55 568.96 413.17 569.29 410.7 556.34 405.93 568.63 4 Y
2 H
0 Z
N
409.55 568.96 413.17 569.29 410.7 556.34 405.93 568.63 4 Y
V
403.94 630.68 409.46 569.96 2 L
N
90 450 1 1 267.98 99.82 570.03 GG
99.79 569.03 103.43 568.9 99.34 556.35 96.15 569.16 4 Y
N
99.79 569.03 103.43 568.9 99.34 556.35 96.15 569.16 4 Y
V
318.9 630.68 M
 318.9 604.69 318.9 604.69 209.05 598.2 D
 118.68 592.85 100.6 592.08 99.82 570.03 D
N
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(p) 407.2 528.07 T
8 12 Q
(0) 417.59 523.27 T
6 16 Q
(k) 431.78 528.07 T
8 12 Q
(1) 441.38 523.27 T
6 16 Q
(a) 455.83 528.07 T
8 12 Q
(1) 465.33 523.27 T
6 16 Q
(p) 479.58 528.07 T
8 12 Q
(1) 489.96 523.27 T
2 16 Q
(\274) 503.96 528.07 T
6 F
(k) 527.96 528.07 T
6 12 Q
(m) 537.56 523.27 T
6 16 Q
(a) 556.22 528.07 T
6 12 Q
(m) 565.73 523.27 T
6 16 Q
(p) 584.39 528.07 T
6 12 Q
(m) 594.78 523.27 T
2 16 Q
(\274) 613.44 528.07 T
6 F
(k) 637.44 528.07 T
6 12 Q
(s) 647.04 523.27 T
6 16 Q
(a) 661.71 528.07 T
6 12 Q
(s) 671.21 523.27 T
6 16 Q
(p) 685.88 528.07 T
6 12 Q
(s) 696.27 523.27 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 423.59 528.07 T
(,) 447.58 528.07 T
(,) 471.58 528.07 T
(,) 495.96 528.07 T
(,) 519.96 528.07 T
(,) 548.23 528.07 T
(,) 576.4 528.07 T
(,) 605.45 528.07 T
(,) 629.44 528.07 T
(,) 653.71 528.07 T
(,) 677.89 528.07 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 419.39 540.79 TF
(\051) 0 -270 443.58 540.79 TF
(\051) 0 -270 467.58 540.79 TF
(\051) 0 -270 491.77 540.79 TF
(\051) 0 -270 542.09 540.79 TF
(\051) 0 -270 570.31 540.79 TF
(\051) 0 -270 598.92 540.79 TF
(\051) 0 -270 649.58 540.79 TF
(\051) 0 -270 673.8 540.79 TF
(\051) 0 -270 698.41 540.79 TF
0 0 0 1 0 0 0 K
56.69 289.13 793.7 799.37 C
0 246.61 841.89 841.89 C
56.69 289.13 793.7 799.37 C
56.69 295.91 793.7 470.77 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
70.87 300.98 446.46 343.5 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
2 Z
0 X
N
0 1 1 0 1 0 0 K
6 16 Q
0 1 1 0 1 0 0 K
(p) 79.87 321.24 T
8 12 Q
(0) 90.25 316.44 T
6 16 Q
(k) 104.25 321.24 T
8 12 Q
(1) 113.85 316.44 T
6 16 Q
(a) 127.85 321.24 T
8 12 Q
(1) 137.35 316.44 T
6 16 Q
(p) 151.35 321.24 T
8 12 Q
(1) 161.73 316.44 T
2 16 Q
(\274) 175.73 321.24 T
6 F
(k) 199.73 321.24 T
6 12 Q
(m) 209.32 316.44 T
8 F
(1) 231.99 316.44 T
7 F
(\320) 222.99 316.44 T
6 16 Q
(a) 245.99 321.24 T
6 12 Q
(m) 255.49 316.44 T
8 F
(1) 278.16 316.44 T
7 F
(\320) 269.16 316.44 T
6 16 Q
(p) 292.15 321.24 T
6 12 Q
(m) 302.54 316.44 T
8 F
(1) 325.2 316.44 T
7 F
(\320) 316.2 316.44 T
0.43 0.91 0.3 0 0.57 0.09 0.7 K
6 16 Q
0.43 0.91 0.3 0 0.57 0.09 0.7 K
(k) 339.2 321.24 T
6 12 Q
(r) 348.8 316.44 T
6 16 Q
(a) 361.47 321.24 T
6 12 Q
(r) 370.97 316.44 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 16 Q
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(p) 383.64 321.24 T
8 12 Q
(0) 394.02 316.44 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 237.99 321.24 T
(,) 284.16 321.24 T
(,) 331.2 321.24 T
(,) 353.47 321.24 T
(,) 375.64 321.24 T
(,) 96.25 321.24 T
(,) 119.85 321.24 T
(,) 143.35 321.24 T
(,) 167.73 321.24 T
(,) 191.73 321.24 T
0 1 1 0 1 0 0 K
81.46 335.56 94.65 335.56 2 L
0.72 H
0 1 1 0 1 0 0 K
N
105.85 335.56 118.25 335.56 2 L
N
129.44 335.56 141.75 335.56 2 L
N
152.95 335.56 166.13 335.56 2 L
N
201.32 335.56 236.39 335.56 2 L
N
247.59 335.56 282.56 335.56 2 L
N
293.75 335.56 329.6 335.56 2 L
N
81.46 335.56 94.65 335.56 2 L
N
105.85 335.56 118.25 335.56 2 L
N
129.44 335.56 141.75 335.56 2 L
N
152.95 335.56 166.13 335.56 2 L
N
201.32 335.56 236.39 335.56 2 L
N
247.59 335.56 282.56 335.56 2 L
N
293.75 335.56 329.6 335.56 2 L
N
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 395.83 333.96 TF
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
460.63 300.13 779.53 342.65 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
0 X
N
205.51 414.36 503.15 456.88 7.09 RR
6 X
V
0 X
N
90 450 1 1 312.27 470.25 355.45 GG
470.92 354.71 473.61 357.15 479.45 345.33 468.23 352.26 4 Y
2 H
0 Z
N
470.92 354.71 473.61 357.15 479.45 345.33 468.23 352.26 4 Y
V
411.02 420.6 470.25 355.45 2 L
N
90 450 1 1 267.98 99.82 360.8 GG
99.79 359.8 103.43 359.67 99.34 347.12 96.15 359.93 4 Y
N
99.79 359.8 103.43 359.67 99.34 347.12 96.15 359.93 4 Y
V
318.9 421.45 M
 318.9 395.47 318.9 395.47 209.05 388.97 D
 118.68 383.62 100.6 382.85 99.82 360.8 D
N
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(p) 468.81 321.24 T
8 12 Q
(1) 479.19 316.44 T
2 16 Q
(\274) 493.19 321.24 T
6 F
(k) 517.19 321.24 T
6 12 Q
(m) 526.79 316.44 T
6 16 Q
(a) 545.45 321.24 T
6 12 Q
(m) 554.96 316.44 T
6 16 Q
(p) 573.62 321.24 T
6 12 Q
(m) 584.01 316.44 T
2 16 Q
(\274) 602.67 321.24 T
6 F
(k) 626.67 321.24 T
6 12 Q
(s) 636.27 316.44 T
6 16 Q
(a) 650.94 321.24 T
6 12 Q
(s) 660.44 316.44 T
6 16 Q
(p) 675.11 321.24 T
6 12 Q
(s) 685.5 316.44 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 485.19 321.24 T
(,) 509.19 321.24 T
(,) 537.46 321.24 T
(,) 565.62 321.24 T
(,) 594.67 321.24 T
(,) 618.67 321.24 T
(,) 642.94 321.24 T
(,) 667.11 321.24 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 481 333.96 TF
(\051) 0 -270 531.32 333.96 TF
(\051) 0 -270 559.54 333.96 TF
(\051) 0 -270 588.15 333.96 TF
(\051) 0 -270 638.81 333.96 TF
(\051) 0 -270 663.03 333.96 TF
(\051) 0 -270 687.64 333.96 TF
0 0 0 1 0 0 0 K
2 F
0 0 0 1 0 0 0 K
(\274) 213.04 428.8 T
6 F
(k) 237.03 428.8 T
6 12 Q
(r) 246.63 424 T
0 0 0 1 0 0 0 K
8 F
(1) 263.3 424 T
0 0 0 1 0 0 0 K
7 F
(\320) 254.3 424 T
6 16 Q
(a) 277.3 428.8 T
6 12 Q
(r) 286.8 424 T
0 0 0 1 0 0 0 K
8 F
(1) 303.46 424 T
0 0 0 1 0 0 0 K
7 F
(\320) 294.46 424 T
6 16 Q
(p) 317.46 428.8 T
6 12 Q
(r) 327.85 424 T
0 0 0 1 0 0 0 K
8 F
(1) 344.51 424 T
0 0 0 1 0 0 0 K
7 F
(\320) 335.51 424 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 16 Q
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(k) 358.71 428.8 T
8 12 Q
(1) 368.31 424 T
6 16 Q
(a) 382.75 428.8 T
8 12 Q
(1) 392.26 424 T
0 0 0 1 0 0 0 K
6 16 Q
0 0 0 1 0 0 0 K
(p) 406.5 428.8 T
6 12 Q
(r) 416.89 424 T
2 16 Q
(\274) 429.55 428.8 T
(,) 229.04 428.8 T
(,) 269.3 428.8 T
(,) 309.46 428.8 T
(,) 350.51 428.8 T
(,) 374.51 428.8 T
(,) 398.51 428.8 T
(,) 421.55 428.8 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 370.51 441.52 TF
0 0 0 1 0 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 394.51 441.52 TF
0 0 0 1 0 0 0 K
56.69 289.13 793.7 799.37 C
0 246.61 841.89 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 295
%%Page: "25" 3
595.28 841.89 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0.5 0.5 0 0 0.5 0.5 1]
[ 0 0 0 0.7 0.3 0.3 0.3]
[ 0 0 0 0.8 0.2 0.2 0.2]
[ 0.85 0.85 0.4 0 0.15 0.15 0.6]
[ 1 0.72 0.2 0.06 0 0.22 0.74]
[ 0 0.25 1 0 1 0.75 0]
[ 0.43 0.91 0.3 0 0.57 0.09 0.7]
[ 1 0.8 0 0 0 0.2 1]
[ 0 0.25 1 0 1 0.75 0]
[ 0.9 0.1 0.2 0 0.1 0.9 0.8]
 24 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
56.69 806.46 793.7 820.63 R
7 X
0 0 0 1 0 0 0 K
V
56.69 260.79 793.7 274.96 R
V
0 0.3 1 0 1 0.7 0 K
0 12 Q
0 X
0 0.3 1 0 1 0.7 0 K
() 56.69 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
() 373.87 266.96 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
() 767 266.96 T
0 0 0 1 0 0 0 K
0 813.54 0 274.96 2 L
0.1 H
2 Z
0 0 0 1 0 0 0 K
N
28.35 841.89 813.54 841.89 2 L
N
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
(LFE Datenbanken und Informationssysteme) 56.69 266.96 T
() 373.87 266.96 T
(11) 767 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
() 780.35 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 768.28 793.7 775.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 772.54 793.7 772.54 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 246.61 841.89 841.89 C
1 0.8 0 0 0 0.2 1 K
1 24 Q
0 X
1 0.8 0 0 0 0.2 1 K
(B-B\212ume) 602.66 783.37 T
0 0 0 1 0 0 0 K
1 0.8 0 0 0 0.2 1 K
( \050For) 708.74 783.37 T
(ts) 759.62 783.37 T
(.\051) 777.86 783.37 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(L) 56.69 740.28 T
1 19.2 Q
(\205SCH) 67.25 740.28 T
1 24 Q
(-A) 121.4 740.28 T
1 19.2 Q
(LGORITHMUS) 149.24 740.28 T
1 24 Q
(\050F) 273.84 740.28 T
1 19.2 Q
(OR) 294.48 740.28 T
(TS) 322.51 740.28 T
1 24 Q
(.\051) 340.56 740.28 T
0 0 0 1 0 0 0 K
2 18 Q
0 0 0 1 0 0 0 K
(\267) 80.9 712.28 T
0 F
(Under\337o) 99.21 712.28 T
(w-Behandlung) 166.96 712.28 T
(V) 127.56 686.28 T
(erschmelz) 138.12 686.28 T
(en \050rechtes Geschwister hat genau m Elemente\051) 219.86 686.28 T
(Mergen der Elemente \050inkl. T) 127.56 476.77 T
(renn-Element aus dem V) 357.47 476.77 T
(org\212nger\051) 555.11 476.77 T
56.69 289.13 793.7 799.37 C
56.69 492.77 793.7 680.28 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
70.87 510.21 368.5 552.72 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
2 Z
0 X
N
0 1 1 0 1 0 0 K
6 16 Q
0 1 1 0 1 0 0 K
(p) 79.87 530.47 T
8 12 Q
(0) 90.25 525.67 T
6 16 Q
(k) 104.25 530.47 T
8 12 Q
(1) 113.85 525.67 T
6 16 Q
(a) 127.85 530.47 T
8 12 Q
(1) 137.35 525.67 T
6 16 Q
(p) 151.35 530.47 T
8 12 Q
(1) 161.73 525.67 T
2 16 Q
(\274) 175.73 530.47 T
6 F
(k) 199.73 530.47 T
6 12 Q
(m) 209.32 525.67 T
8 F
(1) 231.99 525.67 T
7 F
(\320) 222.99 525.67 T
6 16 Q
(a) 245.99 530.47 T
6 12 Q
(m) 255.49 525.67 T
8 F
(1) 278.16 525.67 T
7 F
(\320) 269.16 525.67 T
6 16 Q
(p) 292.15 530.47 T
6 12 Q
(m) 302.54 525.67 T
8 F
(1) 325.2 525.67 T
7 F
(\320) 316.2 525.67 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 237.99 530.47 T
(,) 284.16 530.47 T
(,) 96.25 530.47 T
(,) 119.85 530.47 T
(,) 143.35 530.47 T
(,) 167.73 530.47 T
(,) 191.73 530.47 T
0 1 1 0 1 0 0 K
81.46 544.78 94.65 544.78 2 L
0.72 H
0 1 1 0 1 0 0 K
N
105.85 544.78 118.25 544.78 2 L
N
129.44 544.78 141.75 544.78 2 L
N
152.95 544.78 166.13 544.78 2 L
N
201.32 544.78 236.39 544.78 2 L
N
247.59 544.78 282.56 544.78 2 L
N
293.75 544.78 329.6 544.78 2 L
N
0 0 0 1 0 0 0 K
396.85 510.21 779.39 552.72 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
0 X
N
205.51 623.59 503.15 666.11 7.09 RR
6 X
V
0 X
N
(\274) 213.67 639.94 T
6 F
(k) 237.67 639.94 T
6 12 Q
(r) 247.27 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 263.93 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 254.93 635.14 T
6 16 Q
(a) 277.93 639.94 T
6 12 Q
(r) 287.43 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 304.1 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 295.1 635.14 T
6 16 Q
(p) 318.1 639.94 T
6 12 Q
(r) 328.48 635.14 T
0 0 0 1 0 0 0 K
8 F
(1) 345.15 635.14 T
0 0 0 1 0 0 0 K
7 F
(\320) 336.15 635.14 T
0.43 0.91 0.3 0 0.57 0.09 0.7 K
6 16 Q
0.43 0.91 0.3 0 0.57 0.09 0.7 K
(k) 359.14 639.94 T
6 12 Q
(r) 368.74 635.14 T
6 16 Q
(a) 381.41 639.94 T
6 12 Q
(r) 390.91 635.14 T
0 0 0 1 0 0 0 K
6 16 Q
0 0 0 1 0 0 0 K
(p) 403.58 639.94 T
6 12 Q
(r) 413.96 635.14 T
2 16 Q
(\274) 426.63 639.94 T
(,) 229.67 639.94 T
(,) 269.93 639.94 T
(,) 310.1 639.94 T
(,) 351.15 639.94 T
(,) 373.41 639.94 T
(,) 395.58 639.94 T
(,) 418.63 639.94 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(p) 405.03 528.07 T
8 12 Q
(0) 415.41 523.27 T
6 16 Q
(k) 429.61 528.07 T
8 12 Q
(1) 439.21 523.27 T
6 16 Q
(a) 453.66 528.07 T
8 12 Q
(1) 463.16 523.27 T
6 16 Q
(p) 477.41 528.07 T
8 12 Q
(1) 487.79 523.27 T
2 16 Q
(\274) 501.79 528.07 T
6 F
(k) 525.79 528.07 T
6 12 Q
(m) 535.39 523.27 T
6 16 Q
(a) 554.05 528.07 T
6 12 Q
(m) 563.55 523.27 T
6 16 Q
(p) 582.22 528.07 T
6 12 Q
(m) 592.6 523.27 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 421.41 528.07 T
(,) 445.41 528.07 T
(,) 469.41 528.07 T
(,) 493.79 528.07 T
(,) 517.79 528.07 T
(,) 546.05 528.07 T
(,) 574.22 528.07 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 417.22 540.79 TF
(\051) 0 -270 441.41 540.79 TF
(\051) 0 -270 465.41 540.79 TF
(\051) 0 -270 489.6 540.79 TF
(\051) 0 -270 539.92 540.79 TF
(\051) 0 -270 568.14 540.79 TF
(\051) 0 -270 596.75 540.79 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 1 1 280.3 407.93 569.75 GG
408.11 568.76 411.68 569.41 410.37 556.29 404.53 568.11 4 Y
2 H
0 Z
N
408.11 568.76 411.68 569.41 410.37 556.29 404.53 568.11 4 Y
V
396.85 630.68 407.93 569.75 2 L
N
90 450 1 1 267.98 99.82 570.03 GG
99.79 569.03 103.43 568.9 99.34 556.35 96.15 569.16 4 Y
N
99.79 569.03 103.43 568.9 99.34 556.35 96.15 569.16 4 Y
V
318.9 630.68 M
 318.9 604.69 318.9 604.69 209.05 598.2 D
 118.68 592.85 100.6 592.08 99.82 570.03 D
N
56.69 289.13 793.7 799.37 C
0 246.61 841.89 841.89 C
56.69 289.13 793.7 799.37 C
56.69 295.91 793.7 470.77 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
70.87 300.98 595.28 343.5 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
2 Z
0 X
N
0 1 1 0 1 0 0 K
6 16 Q
0 1 1 0 1 0 0 K
(p) 79.87 321.24 T
8 12 Q
(0) 90.25 316.44 T
6 16 Q
(k) 104.25 321.24 T
8 12 Q
(1) 113.85 316.44 T
6 16 Q
(a) 127.85 321.24 T
8 12 Q
(1) 137.35 316.44 T
6 16 Q
(p) 151.35 321.24 T
8 12 Q
(1) 161.73 316.44 T
2 16 Q
(\274) 175.73 321.24 T
6 F
(k) 199.73 321.24 T
6 12 Q
(m) 209.32 316.44 T
8 F
(1) 231.99 316.44 T
7 F
(\320) 222.99 316.44 T
6 16 Q
(a) 245.99 321.24 T
6 12 Q
(m) 255.49 316.44 T
8 F
(1) 278.16 316.44 T
7 F
(\320) 269.16 316.44 T
6 16 Q
(p) 292.15 321.24 T
6 12 Q
(m) 302.54 316.44 T
8 F
(1) 325.2 316.44 T
7 F
(\320) 316.2 316.44 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 237.99 321.24 T
(,) 284.16 321.24 T
0.43 0.91 0.3 0 0.57 0.09 0.7 K
6 F
0.43 0.91 0.3 0 0.57 0.09 0.7 K
(k) 339.2 321.24 T
6 12 Q
(r) 348.8 316.44 T
6 16 Q
(a) 361.47 321.24 T
6 12 Q
(r) 370.97 316.44 T
0.9 0.1 0.2 0.2 0 0.7 0.6 K
6 16 Q
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(p) 383.64 321.24 T
8 12 Q
(0) 394.02 316.44 T
6 16 Q
(k) 408.22 321.24 T
8 12 Q
(1) 417.82 316.44 T
6 16 Q
(a) 432.26 321.24 T
8 12 Q
(1) 441.77 316.44 T
6 16 Q
(p) 456.01 321.24 T
8 12 Q
(1) 466.4 316.44 T
2 16 Q
(\274) 480.39 321.24 T
6 F
(k) 504.39 321.24 T
6 12 Q
(m) 513.99 316.44 T
6 16 Q
(a) 532.66 321.24 T
6 12 Q
(m) 542.16 316.44 T
6 16 Q
(p) 560.83 321.24 T
6 12 Q
(m) 571.21 316.44 T
0 0 0 1 0 0 0 K
2 16 Q
0 0 0 1 0 0 0 K
(,) 96.25 321.24 T
(,) 119.85 321.24 T
(,) 143.35 321.24 T
(,) 167.73 321.24 T
(,) 191.73 321.24 T
(,) 331.2 321.24 T
(,) 353.47 321.24 T
(,) 375.64 321.24 T
(,) 400.02 321.24 T
(,) 424.02 321.24 T
(,) 448.01 321.24 T
(,) 472.4 321.24 T
(,) 496.39 321.24 T
(,) 524.66 321.24 T
(,) 552.83 321.24 T
0 1 1 0 1 0 0 K
81.46 335.56 94.65 335.56 2 L
0.72 H
0 1 1 0 1 0 0 K
N
105.85 335.56 118.25 335.56 2 L
N
129.44 335.56 141.75 335.56 2 L
N
152.95 335.56 166.13 335.56 2 L
N
201.32 335.56 236.39 335.56 2 L
N
247.59 335.56 282.56 335.56 2 L
N
293.75 335.56 329.6 335.56 2 L
N
81.46 335.56 94.65 335.56 2 L
N
105.85 335.56 118.25 335.56 2 L
N
129.44 335.56 141.75 335.56 2 L
N
152.95 335.56 166.13 335.56 2 L
N
201.32 335.56 236.39 335.56 2 L
N
247.59 335.56 282.56 335.56 2 L
N
293.75 335.56 329.6 335.56 2 L
N
0.9 0.1 0.2 0.2 0 0.7 0.6 K
7 F
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 395.83 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 420.02 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 444.01 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 468.2 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 518.53 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 546.74 333.96 TF
0 1 1 0 1 0 0 K
0.9 0.1 0.2 0.2 0 0.7 0.6 K
(\051) 0 -270 575.35 333.96 TF
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
205.51 414.36 503.15 456.88 7.09 RR
6 X
0 0 0 1 0 0 0 K
V
0.1 H
0 X
N
2 F
(\274) 213.67 430.71 T
6 F
(k) 237.67 430.71 T
6 12 Q
(r) 247.27 425.91 T
0 0 0 1 0 0 0 K
8 F
(1) 263.93 425.91 T
0 0 0 1 0 0 0 K
7 F
(\320) 254.93 425.91 T
6 16 Q
(a) 277.93 430.71 T
6 12 Q
(r) 287.43 425.91 T
0 0 0 1 0 0 0 K
8 F
(1) 304.1 425.91 T
0 0 0 1 0 0 0 K
7 F
(\320) 295.1 425.91 T
6 16 Q
(p) 318.1 430.71 T
6 12 Q
(r) 328.48 425.91 T
0 0 0 1 0 0 0 K
8 F
(1) 345.15 425.91 T
0 0 0 1 0 0 0 K
7 F
(\320) 336.15 425.91 T
2 16 Q
(\274) 359.14 430.71 T
(,) 229.67 430.71 T
(,) 269.93 430.71 T
(,) 310.1 430.71 T
(,) 351.15 430.71 T
90 450 1 1 267.98 99.82 360.8 GG
99.79 359.8 103.43 359.67 99.34 347.12 96.15 359.93 4 Y
2 H
0 Z
N
99.79 359.8 103.43 359.67 99.34 347.12 96.15 359.93 4 Y
V
318.9 421.45 M
 318.9 395.47 318.9 395.47 209.05 388.97 D
 118.68 383.62 100.6 382.85 99.82 360.8 D
N
56.69 289.13 793.7 799.37 C
0 246.61 841.89 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 296
%%Page: "26" 4
595.28 841.89 1 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0 0 0 1 0 0 0]
[ 0.5 0.5 0 0 0.5 0.5 1]
[ 0 0 0 0.7 0.3 0.3 0.3]
[ 0 0 0 0.8 0.2 0.2 0.2]
[ 0.85 0.85 0.4 0 0.15 0.15 0.6]
[ 1 0.72 0.2 0.06 0 0.22 0.74]
[ 0 0.25 1 0 1 0.75 0]
[ 0.43 0.91 0.3 0 0.57 0.09 0.7]
[ 1 0.8 0 0 0 0.2 1]
[ 0 0.25 1 0 1 0.75 0]
[ 0.9 0.1 0.2 0 0.1 0.9 0.8]
 24 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
56.69 806.46 793.7 820.63 R
7 X
0 0 0 1 0 0 0 K
V
56.69 260.79 793.7 274.96 R
V
0 0.3 1 0 1 0.7 0 K
0 12 Q
0 X
0 0.3 1 0 1 0.7 0 K
() 56.69 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
() 373.87 266.96 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
() 767 266.96 T
0 0 0 1 0 0 0 K
0 813.54 0 274.96 2 L
0.1 H
2 Z
0 0 0 1 0 0 0 K
N
28.35 841.89 813.54 841.89 2 L
N
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
(LFE Datenbanken und Informationssysteme) 56.69 266.96 T
() 373.87 266.96 T
(12) 767 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
() 780.35 266.96 T
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 768.28 793.7 775.37 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
56.69 772.54 793.7 772.54 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 246.61 841.89 841.89 C
1 0.8 0 0 0 0.2 1 K
1 24 Q
0 X
1 0.8 0 0 0 0.2 1 K
(B-B\212ume) 602.66 783.37 T
0 0 0 1 0 0 0 K
1 0.8 0 0 0 0.2 1 K
( \050For) 708.74 783.37 T
(ts) 759.62 783.37 T
(.\051) 777.86 783.37 T
0 0 0 1 0 0 0 K
0 0 0 0.5 0.5 0.5 0.5 K
0 0 0 0.5 0.5 0.5 0.5 K
(K) 56.69 740.28 T
1 19.2 Q
(OMPLEXIT\200T) 71.57 740.28 T
(DES) 189.65 740.28 T
1 24 Q
(E) 229.78 740.28 T
1 19.2 Q
(INF\206GE) 242.26 740.28 T
1 24 Q
(-/L) 309.46 740.28 T
1 19.2 Q
(\205SCH) 341.14 740.28 T
1 24 Q
(-A) 395.28 740.28 T
1 19.2 Q
(LGORITHMUS) 423.12 740.28 T
0 0 0 1 0 0 0 K
2 18 Q
0 0 0 1 0 0 0 K
(\267) 80.9 712.28 T
0 F
(Einf\237gen) 99.21 712.28 T
(Einf\237gen immer in einem Blatt) 127.56 686.28 T
(schlimmster F) 127.56 654.28 T
(all: Ov) 238.65 654.28 T
(er\337o) 289.22 654.28 T
(w in jedem Knoten auf dem Pf) 323.96 654.28 T
(ad) 563.54 654.28 T
2 F
(\256) 127.56 622.28 T
0 F
( K) 145.32 622.28 T
(omple) 161.62 622.28 T
(xit\212t v) 210.09 622.28 T
(on der Ordn) 256.65 622.28 T
(ung der H\232he) 352.52 622.28 T
2 F
(\267) 80.9 594.28 T
0 F
(L\232schen) 99.21 594.28 T
(L\232schen in einem Knoten be) 127.56 568.28 T
(wir) 355.33 568.28 T
(kt L\232schen des Inorder-Nachf) 378.59 568.28 T
(olgers \050auf einem) 614.15 568.28 T
(Blatt\051) 127.56 546.28 T
(schlimmster F) 127.56 514.28 T
(all: Under\337o) 238.65 514.28 T
(w in jedem Knoten auf dem Pf) 334.42 514.28 T
(ad) 573.99 514.28 T
2 F
(\256) 127.56 482.28 T
0 F
( K) 145.32 482.28 T
(omple) 161.62 482.28 T
(xit\212t v) 210.09 482.28 T
(on der Ordn) 256.65 482.28 T
(ung der H\232he) 352.52 482.28 T
(B-Baum stellt eine Realisier) 85.04 432.28 T
(ung eines DDs auf einem per) 306.37 432.28 T
(ipheren Speicher) 539.74 432.28 T
(, die alle) 674.9 432.28 T
(Oper) 85.04 407.78 T
(ationen mit) 124.87 407.78 T
( Zeit er) 316.23 407.78 T
(laubt.) 372.51 407.78 T
217.91 395.58 316.23 422.28 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 18 Q
0 X
0 0 0 1 0 0 0 K
(O) 218.91 407.78 T
(log) 238.91 407.78 T
0 14 Q
(m) 263.61 401.98 T
0 0 0 1 0 0 0 K
7 F
(1) 290.16 401.98 T
(+) 278.77 401.98 T
0 0 0 1 0 0 0 K
0 18 Q
(n) 298.22 407.78 T
7 F
(\050) 232.92 407.78 T
(\051) 308.23 407.78 T
0 246.61 841.89 841.89 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 297
%%Trailer
%%BoundingBox: 0 0 595.28 841.89
%%PageOrder: Ascend
%%Pages: 4
%%DocumentFonts: Helvetica
%%+ AvantGarde-Demi
%%+ Symbol
%%+ AvantGarde-Book
%%+ ZapfDingbats
%%+ Helvetica-Oblique
%%+ Helvetica-Bold
%%+ Times-Roman
%%+ Times-Bold
%%+ AvantGarde-DemiOblique
%%+ ZapfChancery-MediumItalic
%%EOF
